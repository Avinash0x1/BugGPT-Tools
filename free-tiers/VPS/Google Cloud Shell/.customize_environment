#!/usr/bin/env bash

#Env Vars
export GITHUB_USER="Azathothas" # This is CaseSensitive
export GITHUB_REPO="Azathothas/GoogleVPS" # Change this to "$Your_Github_Username/$Name_of_Your_Github_Repo"
export GITHUB_TOKEN="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" # Change this to "$Token_of_Your_Github_Repo"
#-----------------------------------------------------#
## DO NOT CHANGE ANYTHING ELSE
## Make sure you have created `.tmux.conf` , `.zshrc` or any other files that the script refrences
#-----------------------------------------------------#
#-----------------------------------------------------#
##Change Defaults
#Suppress BS messages
mkdir -p ~/.cloudshell && touch ~/.cloudshell/no-apt-get-warning >/dev/null 2>&1
#Dirs
mkdir -p "$HOME"/{bin,.local/bin,Tools,tmp} >/dev/null 2>&1
#-----------------------------------------------------#
#-----------------------------------------------------#
##Core Tools
#Install rust
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y >/dev/null 2>&1
source "$HOME/.cargo/env" && clear
#Universal Releases & Binaries, used as a function in ~/.zshrc
go install github.com/zyedidia/eget@latest && cp "$HOME/gopath/bin/eget" "$HOME/bin/" >/dev/null 2>&1
#Anew, used to update config files
go install github.com/tomnomnom/anew@latest && cp "$HOME/gopath/bin/anew" "$HOME/bin/" >/dev/null 2>&1
#Aptitude
sudo apt-get install aptitude -y >/dev/null 2>&1
sudo aptitude install apt-transport-https apt-utils dos2unix figlet fonts-powerline iputils-arping iputils-clockdiff iputils-ping iputils-tracepath neofetch ping software-properties-common wget xclip -y >/dev/null 2>&1
#-----------------------------------------------------#
#-----------------------------------------------------#
##Setup USR Settings
#Copy Core Binaries
sudo cp $(which dos2unix) "$HOME/bin/dos2unix" >/dev/null 2>&1 && sudo cp $(which neofetch) "$HOME/bin/neofetch" >/dev/null 2>&1
#Git Clone Remote Repo for Sync
GITDIR=$(echo $GITHUB_REPO | sed -e '/^$/d' -e 's/[[:space:]]*$//' | awk -F '/' '{print $2}') && export GITDIR="$GITDIR" 
if [ ! -d "$GITDIR" ]; then #Clone
  cd "$HOME" && git clone "https://$GITHUB_USER:$GITHUB_TOKEN@github.com/$GITHUB_REPO.git"
  dos2unix --quiet "$GITDIR/.scripts/gsync.sh" >/dev/null 2>&1 && sed -e '/^$/d' -e 's/[[:space:]]*$//' -i "$GITDIR/.scripts/gsync.sh" >/dev/null 2>&1
  sudo chmod +xwr "$GITDIR/.scripts/gsync.sh" >/dev/null 2>&1
else #Pull latest
  cd "$GITDIR" && git fetch --all >/dev/null 2>&1 && git reset --hard origin/main >/dev/null 2>&1 && git clean -fd >/dev/null 2>&1 && git pull --force origin main >/dev/null 2>&1 
  dos2unix --quiet "$GITDIR/.scripts/gsync.sh" && sed -e '/^$/d' -e 's/[[:space:]]*$//' -i "$GITDIR/.scripts/gsync.sh" >/dev/null 2>&1
  sudo chmod +xwr "$GITDIR/.scripts/gsync.sh" >/dev/null 2>&1
fi
#-----------------------------------------------------#
#Customization & QOL Changes:
#Fetch latest $HOME/.customize_environment
curl -qfsSL "https://raw.githubusercontent.com/$GITHUB_REPO/main/.customize_environment" -H "Authorization: Bearer $GITHUB_TOKEN" -o "$HOME/.customize_environment" >/dev/null 2>&1 && dos2unix --quiet "$HOME/.customize_environment" && sed -e '/^$/d' -e 's/[[:space:]]*$//' -i "$HOME/.customize_environment"
#-----------------------------------------------------#
#Tmux Plugins
if [ ! -d "$HOME/.tmux/plugins/tpm" ]; then
  mkdir -p "$HOME/.tmux"
  git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm >/dev/null 2>&1
fi
#Fetch latest tmux.conf & set
curl -qfsSL "https://raw.githubusercontent.com/$GITHUB_REPO/main/.tmux.conf" -H "Authorization: Bearer $GITHUB_TOKEN" -o "$HOME/.tmux.conf" >/dev/null 2>&1
dos2unix --quiet "$HOME/.tmux.conf" && sed -e '/^$/d' -e 's/[[:space:]]*$//' -i "$HOME/.tmux.conf" >/dev/null 2>&1
#Source
tmux source-file "$HOME/.tmux.conf" >/dev/null 2>&1
#-----------------------------------------------------#
#Install zsh
sudo apt-get install zsh zsh-syntax-highlighting zsh-autosuggestions -y
#Fetch latest ~/.zshrc & set it
curl -qfsSL "https://raw.githubusercontent.com/$GITHUB_REPO/main/.zshrc" -H "Authorization: Bearer $GITHUB_TOKEN" -o "$HOME/.zshrc" 
dos2unix --quiet "$HOME/.zshrc" && sed -e '/^$/d' -e 's/[[:space:]]*$//' -i "$HOME/.zshrc" >/dev/null 2>&1
#Zshenv
curl -qfsSL "https://raw.githubusercontent.com/$GITHUB_REPO/main/.zshenv" -H "Authorization: Bearer $GITHUB_TOKEN" -o "$HOME/.zshenv" 
dos2unix --quiet "$HOME/.zshenv" && sed -e '/^$/d' -e 's/[[:space:]]*$//' -i "$HOME/.zshenv" >/dev/null 2>&1
#Changing the shell & sourcing is done by ~/.bashrc:
#-----------------------------------------------------#
#FZF#
#Deps
eget sharkdp/fd --to "$HOME/bin/fdfind" --asset ^gnu && sudo chmod +xwr "$HOME/bin/fdfind"
eget sharkdp/bat --to "$HOME/bin/batcat" --asset ^gnu && sudo chmod +xwr "$HOME/bin/batcat"
#Install fzf
if [ ! -d "$HOME/.fzf" ]; then
  git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf >/dev/null 2>&1
  ~/.fzf/install --all >/dev/null 2>&1
fi
# Setup fzf
# fzf is auto setup from ~/.zshrc
# Install nerdfonts
(cd "$(mktemp -d)")  && wget https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.1/FiraCode.zip && sudo unzip FiraCode.zip -d /usr/share/fonts && sudo fc-cache -f -v 
# Install Starship
curl -sS https://starship.rs/install.sh | sudo sh -s -- -y >/dev/null 2>&1
# Bash is provisioned each time, add this to ~/.bashrc, if we don't want to type zsh 
echo "sudo chsh -s /bin/zsh "$USER" && zsh" | anew -q "$HOME/.bashrc" 
echo "$(which zsh)" | anew -q "$HOME/.profile"
source "$HOME/.bashrc" && source "$HOME/.profile"
#-----------------------------------------------------#
clear
#EOF

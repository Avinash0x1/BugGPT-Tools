#!/usr/bin/env bash
# curl -qfsSL "https://raw.githubusercontent.com/Azathothas/BugGPT-Tools/main/free-tiers/VPS/.scripts/bash_neofetch.sh" | bash
# You may need to use dos2unix if random syntax errors
echo -e "\nHostname: $(hostname)\nUser: $(whoami) $([ "$EUID" -ne 0 ] && echo '(NOT root)' || echo '(root)')\nRoot: $(grep "^root:" /etc/passwd | cut -d: -f1 2>/dev/null && echo '#Exists in /etc/passwd')\nSudo: $(command -v sudo >/dev/null 2>&1 && echo 'Yes' $(sudo grep -E '^\s*[^#]*\s+ALL\s*=\s*\(\s*ALL\s*\)\s+NOPASSWD:' /etc/sudoers >/dev/null 2>&1 && echo '(Passwordless)') || echo 'Not Installed/Available')\nUptime: $(uptime -p 2>/dev/null || uptime | awk '{sub(/,$/, "", $3); print $3}')\nOS: $(cat /etc/os-release | grep PRETTY_NAME | cut -d= -f2 | sed 's/"//g') ($(cat /etc/os-release | grep ID_LIKE | cut -d= -f2 | sed 's/"//g'))\nArchitecture: $(uname -m)\nKernel: $(uname -r)\nPackage Manager: $(cmds=$(for cmd in apk apt brew conda dnf emerge eopkg flatpak guix installer nix pacman pacman4 pisi pkg pkgutil port snap swupd tdnf xbps yum zypper; do command -v "$cmd" >/dev/null && printf "%s," "$cmd"; done) ; echo "${cmds%,}")\nSystem: $(ps -p 1 -o comm=)\nShell: $(echo "$SHELL")\nCPU: $(grep -c ^processor /proc/cpuinfo) x $(grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 ) @ $(grep -m1 "cpu MHz" /proc/cpuinfo | cut -d: -f2 | tr -d '[:space:]') MHz\nRAM: $(free -h | awk '/^Mem:/ {print $3 "/" $2}')\nDisk: $(df -h 2>/dev/null | awk '/^\/dev\// {if (line) line = line " | "; line = line $1"("$6")" " " $3 "/" $2 " (" $5 " used)"} END {print line}')\nIPv4: $(curl -qfsSL "http://ipv4.whatismyip.akamai.com" 2>/dev/null || echo 'Failed, Maybe no Curl?')\nIPv6: $(curl -qfsSL --ipv6 "http://ipv6.whatismyip.akamai.com" 2>/dev/null || echo 'Failed to Connect')\nCurl: $(command -v curl >/dev/null 2>&1 && which curl || echo '(Not Installed)')\nWget: $(command -v wget >/dev/null 2>&1 && which wget || echo '(Not Installed)')\nGoLang: $(command -v go >/dev/null 2>&1 && go version || echo '(Not Installed)')\nPython(pip): $(command -v pip >/dev/null 2>&1 && pip -V || echo '(Not Installed, maybe try pip3)')\nRust(Cargo): $(command -v cargo >/dev/null 2>&1 && cargo -V || echo '(Not Installed)')\n"
#EOF
